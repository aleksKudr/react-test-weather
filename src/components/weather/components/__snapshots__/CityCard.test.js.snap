// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CityCard
    name={
      Object {
        "clouds": Object {
          "all": 32,
        },
        "dt": 1546322400,
        "dt_txt": "2019-01-01 06:00:00",
        "main": Object {
          "grnd_level": 1023.04,
          "humidity": 76,
          "pressure": 1023.04,
          "sea_level": 1031.42,
          "temp": 263.875,
          "temp_kf": 0,
          "temp_max": 263.875,
          "temp_min": 263.875,
        },
        "snow": Object {
          "3h": 0.069999999999999,
        },
        "sys": Object {
          "pod": "d",
        },
        "weather": Array [
          Object {
            "description": "light snow",
            "icon": "13d",
            "id": 600,
            "main": "Snow",
          },
        ],
        "wind": Object {
          "deg": 234.501,
          "speed": 1.71,
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="col"
        >
          2019-01-01 06:00:00
        </div>,
        <div
          className="col"
        >
          -9.13
        </div>,
        <div
          className="col"
        >
          Snow
        </div>,
      ],
      "className": "row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "2019-01-01 06:00:00",
          "className": "col",
        },
        "ref": null,
        "rendered": "2019-01-01 06:00:00",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "-9.13",
          "className": "col",
        },
        "ref": null,
        "rendered": "-9.13",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Snow",
          "className": "col",
        },
        "ref": null,
        "rendered": "Snow",
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="col"
          >
            2019-01-01 06:00:00
          </div>,
          <div
            className="col"
          >
            -9.13
          </div>,
          <div
            className="col"
          >
            Snow
          </div>,
        ],
        "className": "row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "2019-01-01 06:00:00",
            "className": "col",
          },
          "ref": null,
          "rendered": "2019-01-01 06:00:00",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "-9.13",
            "className": "col",
          },
          "ref": null,
          "rendered": "-9.13",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Snow",
            "className": "col",
          },
          "ref": null,
          "rendered": "Snow",
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
